generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                @id @default(autoincrement())
  email              String             @unique
  password           String
  role               Role               @default(USER)
  images             String?
  title              String?
  bio                String?
  createdAt          DateTime           @default(now())
  updatedAt          DateTime           @updatedAt
  createdExhibitions Exhibition[]       @relation("UserCreatedExhibitions")
  exhibitionArtists  ExhibitionArtist[]
  posts              Post[]
  products           Product[]

  @@map("user")
}

model Post {
  id         Int      @id @default(autoincrement())
  title_en   String?
  title_uk   String?
  content_en String?
  content_uk String?
  authorId   Int      @map("author_id")
  images     String?
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")
  author     User     @relation(fields: [authorId], references: [id])

  @@index([authorId], map: "Post_author_id_fkey")
}

model Product {
  id             Int            @id @default(autoincrement())
  title_en       String
  title_uk       String
  description_en String
  description_uk String
  specs_en       String?
  specs_uk       String?
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  authorId       Int
  author         User           @relation(fields: [authorId], references: [id])
  images         ProductImage[] @relation("ProductImages")

  @@index([authorId], map: "Product_authorId_fkey")
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  imageUrl  String
  productId Int
  product   Product @relation("ProductImages", fields: [productId], references: [id])

  @@index([productId], map: "ProductImage_productId_fkey")
}

model Exhibition {
  id                Int                @id @default(autoincrement())
  title             String
  description       String
  startDate         DateTime
  endDate           DateTime
  time              String?
  location          String
  createdById       Int
  createdAt         DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
  createdBy         User               @relation("UserCreatedExhibitions", fields: [createdById], references: [id])
  exhibitionArtists ExhibitionArtist[]
  images            ExhibitionImage[]

  @@index([createdById], map: "Exhibition_createdById_fkey")
}

model ExhibitionImage {
  id           Int        @id @default(autoincrement())
  imageUrl     String
  exhibitionId Int
  exhibition   Exhibition @relation(fields: [exhibitionId], references: [id])

  @@index([exhibitionId], map: "ExhibitionImage_exhibitionId_fkey")
}

model ExhibitionArtist {
  exhibitionId Int
  artistId     Int
  artist       User       @relation(fields: [artistId], references: [id])
  exhibition   Exhibition @relation(fields: [exhibitionId], references: [id])

  @@id([exhibitionId, artistId])
  @@index([artistId], map: "ExhibitionArtist_artistId_fkey")
}

enum Role {
  USER
  ADMIN
  MUSEUM
  CREATOR
  EDITOR
}
