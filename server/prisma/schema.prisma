generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  authorId  Int      @map("author_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  images    String?
  author    User     @relation(fields: [authorId], references: [id])

  @@index([authorId], map: "Post_author_id_fkey")
}

model Product {
  id           Int            @id @default(autoincrement())
  title        String
  description  String
  specs        String?
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  authorId     Int
  author       User           @relation(fields: [authorId], references: [id])
  Productimage Productimage[]

  @@index([authorId], map: "Product_authorId_fkey")
}

model Exhibition {
  id               Int                @id @default(autoincrement())
  title            String
  description      String
  startDate        DateTime
  endDate          DateTime
  time             String?
  location         String
  createdById      Int
  createdAt        DateTime           @default(now())
  updatedAt        DateTime           @updatedAt
  createdBy        User               @relation("UserCreatedExhibitions", fields: [createdById], references: [id])
  Exhibitionartist Exhibitionartist[]
  Exhibitionimage  Exhibitionimage[]

  @@index([createdById], map: "Exhibition_createdById_fkey")
}

model Exhibitionartist {
  exhibitionId Int
  artistId     Int
  User         User       @relation(fields: [artistId], references: [id], map: "ExhibitionArtist_artistId_fkey")
  Exhibition   Exhibition @relation(fields: [exhibitionId], references: [id], map: "ExhibitionArtist_exhibitionId_fkey")

  @@id([exhibitionId, artistId])
  @@index([artistId], map: "ExhibitionArtist_artistId_fkey")
}

model Exhibitionimage {
  id           Int        @id @default(autoincrement())
  imageUrl     String
  exhibitionId Int
  Exhibition   Exhibition @relation(fields: [exhibitionId], references: [id], map: "ExhibitionImage_exhibitionId_fkey")

  @@index([exhibitionId], map: "ExhibitionImage_exhibitionId_fkey")
}

model Productimage {
  id        Int     @id @default(autoincrement())
  imageUrl  String
  productId Int
  Product   Product @relation(fields: [productId], references: [id], map: "ProductImage_productId_fkey")

  @@index([productId], map: "ProductImage_productId_fkey")
}

model User {
  id                 Int                @id @default(autoincrement())
  email              String             @unique
  password           String
  images             String?
  role               User_role          @default(USER)
  bio                String?
  createdAt          DateTime           @default(now())
  title              String?
  updatedAt          DateTime
  createdExhibitions Exhibition[]       @relation("UserCreatedExhibitions")
  Exhibitionartist   Exhibitionartist[]
  posts              Post[]
  products           Product[]
}

enum User_role {
  USER
  ADMIN
  MUSEUM
  CREATOR
  EDITOR
}
